{"version":3,"file":"static/js/545.e168f8d5.chunk.js","mappings":"oRAEaA,EAAKC,EAAAA,GAAAA,GAAH,mHAOFC,EAAKD,EAAAA,GAAAA,GAAH,wL,SCEf,EATwB,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC/B,OACI,UAACF,EAAD,YACI,oCAAYC,MACZ,uBAAIC,MAGf,EC8BD,EAjCoB,WAChB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAY,mCAAG,2FACjBF,GAAa,GADI,UAEMG,EAAAA,EAAAA,IAAkBT,GAFxB,OAEXU,EAFW,OAIbN,EADa,OAAbM,EACWA,EAEA,IAEfJ,GAAa,GARI,2CAAH,qDAUlBE,GACH,GAAE,CAACR,KAGA,+BAEsB,IAAdK,GAAsB,gDAChBF,EAAQQ,OAAS,GACZ,SAAChB,EAAD,WACC,SAAC,EAAD,CAA4BG,OAAQ,SAAUC,QAAS,WAAjC,SAEvB,uEAI1B,C","sources":["components/ReviewsList.styled.js","components/ReviewsListItem.jsx","components/ReviewsList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n    display:flex; \n    flex-direction: column;\n    gap: 20px;\n    list-style:none;    \n`\n\nexport const Li = styled.li`\n    margin:0;\n    padding:0;\n    &:not(:first-of-type){\n        border-top: 1px dashed black;\n    }\n    & p:first-child{\n        font-weight:700;\n    }\n`","import { Li } from './ReviewsList.styled';\n\nconst ReviewsListItem = ({ author, content }) => {\n    return (\n        <Li>\n            <p>Author: {author}</p>\n            <p>{content}</p>\n        </Li>\n    )\n}\n\nexport default ReviewsListItem","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieReviews } from '../api/fetchTheMovies.js';\nimport ReviewsListItem from './ReviewsListItem.jsx';\nimport { Ul } from './ReviewsList.styled';\n\nconst ReviewsList = () => {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false)\n\n    useEffect(() => {\n        const fetchReviews = async () => {\n            setIsLoading(true)\n            const response = await fetchMovieReviews(id)\n            if (response !== null) {\n                setReviews(response);\n            } else {\n                setReviews([]);\n            }\n            setIsLoading(false)\n        }\n        fetchReviews()\n    }, [id])\n\n    return (\n        <>  \n            {\n                isLoading === true ? (<div>Loading reviews...</div>)\n                    : reviews.length > 0\n                        ? (<Ul>\n                            <ReviewsListItem key={\"id\"} author={\"author\"} content={\"content\"} />\n                        </Ul>)\n                        : (<div>We don't have any reviews for this movie</div>)\n            }\n        </>\n    )\n}\n\nexport default ReviewsList"],"names":["Ul","styled","Li","author","content","id","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","fetchReviews","fetchMovieReviews","response","length"],"sourceRoot":""}