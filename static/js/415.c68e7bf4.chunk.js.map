{"version":3,"file":"static/js/415.c68e7bf4.chunk.js","mappings":"mJAWA,IAXmB,SAAC,GAAuB,IAAtBA,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACxB,OACI,4BACI,wBAAKD,KACL,wBACKC,MAIhB,C,2CCDD,IANuB,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACrB,OACI,yBAAI,SAAC,KAAD,CAAMC,GAAG,GAAT,SAAaD,KAExB,C,8HCDKE,EAAc,SAACC,EAAWC,GAC5B,OAAOC,EAAAA,EAAAA,IAJY,+BAIeF,EAAW,CACzCG,QAAO,QACHC,QALW,oCAMRH,KAGNI,MAAK,SAAAC,GACF,GAAwB,MAApBA,EAASC,OACT,MAAMC,MAAO,oBAEjB,OAAOF,CACV,IACAD,MAAK,SAAAC,GACF,OAAOA,CACV,IACAG,OAAM,SAAAC,GAAK,OAAIA,CAAJ,GACnB,EAEKC,EAAsB,mCAAG,8FACT,oBACZV,EAAa,CAAC,EAFO,SAGJF,EAFL,oBAE4BE,GAHnB,cAGrBK,EAHqB,OAIvBM,EAAa,GACjBN,EAASO,KAAKC,QAAQC,SAAQ,SAAAC,GAC1B,IAAIrB,EAAQ,GAMZ,OAJIA,EADAqB,EAAMrB,MACAqB,EAAMrB,MAENqB,EAAMC,KAETL,EAAWM,KAAK,CAACC,GAAGH,EAAMG,GAAIxB,MAAAA,GACxC,IAb0B,kBAcpBiB,GAdoB,2CAAH,qDAiBtBQ,EAAiB,mCAAG,WAAOC,GAAP,kFACtBC,QAAQC,IAAIF,GACM,gBACZpB,EAAa,CACfuB,MAAOH,EACPI,KAAM,GALY,SAOC1B,EALL,gBAK4BE,GAPxB,cAOhBK,EAPgB,OAQlBM,EAAa,GACjBN,EAASO,KAAKC,QAAQC,SAAQ,SAAAC,GAC1B,IAAIrB,EAAQ,GAMZ,OAJIA,EADAqB,EAAMrB,MACAqB,EAAMrB,MAENqB,EAAMC,KAETL,EAAWM,KAAK,CAACC,GAAGH,EAAMG,GAAIxB,MAAAA,GACxC,IAjBqB,kBAkBfiB,GAlBe,2CAAH,qD,kHCTvB,UA3Ba,WACX,OAA4Bc,EAAAA,EAAAA,UAAS,CAAC,CAAE/B,MAAO,UAAY,CAAEA,MAAO,YAAc,CAAEA,MAAO,WAA3F,eAAOgC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAM9B,EAAW,mCAAG,qGACCY,EAAAA,EAAAA,KADD,cACZE,EADY,yBAEXA,GAFW,2CAAH,qDAIjBd,IACGM,MAAK,SAAAyB,GACJF,EAAUE,EACX,IACFrB,OAAM,SAAAC,GAAK,OAAIY,QAAQC,IAAI,sCAAuCb,EAAvD,GACb,GAAC,KAGA,6BACE,4CACA,SAAC,IAAD,UACGiB,GAAUA,EAAOI,KAAI,SAACf,EAAOgB,GAAR,OACpB,SAAC,IAAD,CAA4BnC,UAAWmB,EAAMrB,OAAxBqC,EADD,QAM7B,C","sources":["components/MoviesList.jsx","components/MoviesListItem.jsx","js/fetch-the-movie-db.js","pages/Home.jsx"],"sourcesContent":["const MoviesList = ({title, children}) => {\n    return (\n        <div>\n            <h2>{title}</h2>\n            <ul>\n                {children}\n            </ul>\n        </div>\n    )\n}\n\nexport default MoviesList","import { Link } from './SharedLayout.styled';\n\nconst MoviesListItem = ({movieName}) => {\n    return (\n        <li><Link to=\"\">{movieName}</Link></li>\n    )\n}\n\nexport default MoviesListItem","import axios from \"axios\";\n\nconst THEMOVIEDB_URL = \"https://api.themoviedb.org/3\"\nconst THEMOVIEDB_KEY = 'c8f343487431a47156d389fa5ccb000e';\n\nconst fetchMovies = (searchUrl, parameters) =>{\n    return axios.get(THEMOVIEDB_URL + searchUrl, {\n        params: {\n            api_key: THEMOVIEDB_KEY,\n            ...parameters\n        }\n    })\n        .then(response => {\n            if (response.status === 404) {\n                throw Error (\"Can't find data!\")\n            }\n            return response\n        })\n        .then(response => {\n            return response\n        })\n        .catch(error => error)\n}\n\nconst fetchMoviesTrendingDay = async () => {\n    const searchUrl = \"/trending/all/day\";\n    const parameters = {};\n    const response = await fetchMovies(searchUrl, parameters);\n    let moviesList = [];\n    response.data.results.forEach(movie => {\n        let title = \"\";\n        if (movie.title) {\n            title=movie.title\n        } else {\n            title=movie.name\n        }\n        return moviesList.push({id:movie.id, title})\n    });\n    return moviesList\n}\n\nconst fetchMoviesSearch = async (filter) => {\n    console.log(filter)\n    const searchUrl = \"/search/movie\";\n    const parameters = {\n        query: filter,\n        page: 1,\n    };\n    const response = await fetchMovies(searchUrl, parameters);\n    let moviesList = [];\n    response.data.results.forEach(movie => {\n        let title = \"\";\n        if (movie.title) {\n            title=movie.title\n        } else {\n            title=movie.name\n        }\n        return moviesList.push({id:movie.id, title})\n    });\n    return moviesList\n}\n\nexport {fetchMoviesTrendingDay, fetchMoviesSearch}","import MoviesList from \"components/MoviesList\";\nimport MoviesListItem from \"components/MoviesListItem\";\nimport { useEffect, useState } from \"react\";\nimport {fetchMoviesTrendingDay} from '../js/fetch-the-movie-db.js'\n\nconst Home = () => {\n  const [movies, setMovies] = useState([{ title: \"Batman\" }, { title: \"Superman\" }, { title: \"Flash\" }])\n  \n  useEffect(() => {\n    const fetchMovies = async () => {\n      const data = await fetchMoviesTrendingDay()\n      return data\n    }\n    fetchMovies()\n      .then(listOfMovies => {\n        setMovies(listOfMovies)\n      })\n    .catch(error => console.log(\"Error fetch list of trending movies\", error))\n  },[])\n\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <MoviesList>\n        {movies && movies.map((movie, index) => (\n          <MoviesListItem key={index} movieName={movie.title} />\n        ))}\n      </MoviesList>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["title","children","movieName","to","fetchMovies","searchUrl","parameters","axios","params","api_key","then","response","status","Error","catch","error","fetchMoviesTrendingDay","moviesList","data","results","forEach","movie","name","push","id","fetchMoviesSearch","filter","console","log","query","page","useState","movies","setMovies","useEffect","listOfMovies","map","index"],"sourceRoot":""}