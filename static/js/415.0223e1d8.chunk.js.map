{"version":3,"file":"static/js/415.0223e1d8.chunk.js","mappings":"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","sources":["api/fetchTheMovies.js","components/MovieList.styled.js","components/MoviesList.jsx","components/MoviesListItem.styled.js","components/MoviesListItem.jsx","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst THEMOVIEDB_URL = \"https://api.themoviedb.org/3\"\nconst THEMOVIEDB_KEY = 'c8f343487431a47156d389fa5ccb000e';\n\nconst fetchTheMovieDB = (searchUrl, parameters) =>{\n    return axios.get(THEMOVIEDB_URL + searchUrl, {\n        params: {\n            api_key: THEMOVIEDB_KEY,\n            language: \"en-US\",\n            ...parameters\n        }\n    })\n        .then(response => {\n            return response\n        })\n        .catch(error => {\n            return null\n    })\n}\n\nconst fetchMoviesTrendingDay = async () => {\n    const searchUrl = \"/trending/movie/day\";\n    const parameters = {};\n    const response = await fetchTheMovieDB(searchUrl, parameters);\n    if (response === null) {\n        return null\n    }\n    let moviesList = [];\n    response.data.results.forEach(movie => {\n    return moviesList.push({id:movie.id, title:movie.title})\n    });\n    return moviesList\n}\n\nconst fetchMoviesSearch = async (filter) => {\n    const searchUrl = \"/search/movie\";\n    const parameters = {\n        query: filter,\n        page: 1,\n    };\n    const response = await fetchTheMovieDB(searchUrl, parameters);\n    if (response === null) {\n        return null\n    }\n    let moviesList = [];\n    response.data.results.forEach(movie => {\n        const { id, title } = movie;\n        return moviesList.push({id, title})\n    });\n    return moviesList\n}\n\nconst fetchMovieDetails = async (id) => {\n    const searchUrl = `/movie/${id}`;\n    const parameters = {};\n    const response = await fetchTheMovieDB(searchUrl, parameters);\n    if (response === null) {\n        return null\n    }\n    const { poster_path, title, vote_average, overview, genres, release_date } = response.data\n    const movie = {\n        src: \"https://image.tmdb.org/t/p/w300\" + poster_path,\n        title,\n        vote_average,\n        overview,\n        genres,\n        year: `${new Date(release_date).getFullYear()}`,\n    }\n    return movie\n}\n\nconst fetchMovieCast = async (id) => {\n    const searchUrl = `/movie/${id}/credits`;\n    const parameters = {};\n    const response = await fetchTheMovieDB(searchUrl, parameters);\n    if (response === null) {\n        return null\n    }\n    let actors = [];\n    response.data.cast.forEach(actor => {\n        const { id, profile_path, name, character } = actor;\n        return actors.push({\n            id,\n            srcImage: profile_path !== null ? \"https://image.tmdb.org/t/p/w200\"+profile_path : null,\n            name,\n            character,\n        })\n    });\n    return actors\n}\n\nconst fetchMovieReviews = async (id) => {\n    const searchUrl = `/movie/${id}/reviews`;\n    const parameters = {};\n    const response = await fetchTheMovieDB(searchUrl, parameters);\n    if (response === null) {\n        return null\n    }\n    let reviews = []\n    response.data.results.forEach(review => {\n        const { id, author, content } = review;\n        return reviews.push({ id, author, content });\n    })\n    return reviews\n}\n\nexport {fetchMoviesTrendingDay, fetchMoviesSearch, fetchMovieDetails, fetchMovieCast, fetchMovieReviews}","import styled from 'styled-components';\n\nexport const H2 = styled.h2`\n    font-size:30px;\n`\n\nexport const Ul = styled.ul`\n    display:flex;\n    flex-direction:column;\n    gap:10px;\n    margin:0;\n    padding:10px;\n    padding-left:20px;\n`","import { H2, Ul } from './MovieList.styled';\n\nconst MoviesList = ({ title, children }) => {\n    return (\n        <div>\n            <H2>{title}</H2>\n            <Ul>\n                {children}\n            </Ul>\n        </div>\n    )\n}\n\nexport default MoviesList","import styled from 'styled-components';\n\nexport const Li = styled.li`\n    display:flex;\n    flex-direction:row;\n    align-items:center;\n    gap:10px;\n    margin:0;\n    padding:0;\n`\n\nexport const Number = styled.p`\n    width:25px;\n    height:25px;\n    border: 1px solid black;\n    border-radius:50%;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    margin:0;\n    padding:0;\n`;","import { Link } from './SharedLayout.styled';\nimport { Li, Number } from './MoviesListItem.styled';\n\nconst MoviesListItem = ({ linkTo, movieName, fromLocation, number }) => {\n    return (\n        <Li><Number>{number}</Number><Link to={`${linkTo}`} state={{from:fromLocation}}>{movieName}</Link></Li>\n    )\n}\n\nexport default MoviesListItem","import MoviesList from \"components/MoviesList\";\nimport MoviesListItem from \"components/MoviesListItem\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport {fetchMoviesTrendingDay} from '../api/fetchTheMovies.js'\n\nconst Home = () => {\n  const [movies, setMovies] = useState([])\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      const response = await fetchMoviesTrendingDay()\n      if (response !== null) {\n        setMovies(response);\n      } else {\n        setMovies([]);\n      }\n    }\n    fetchMovies()\n  },[])\n\n  return (\n    <main>\n      <MoviesList title=\"Trending today\">\n        {movies && movies.map((movie, index) => (\n          <MoviesListItem key={`${movie.id}`} number={index+1} linkTo={\"movies/\"+movie.id} fromLocation={location} movieId={movie.id} movieName={movie.title} />\n        ))}\n      </MoviesList>\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["fetchTheMovieDB","searchUrl","parameters","axios","params","api_key","language","then","response","catch","error","fetchMoviesTrendingDay","moviesList","data","results","forEach","movie","push","id","title","fetchMoviesSearch","filter","query","page","fetchMovieDetails","poster_path","vote_average","overview","genres","release_date","src","year","Date","getFullYear","fetchMovieCast","actors","cast","actor","profile_path","name","character","srcImage","fetchMovieReviews","reviews","review","author","content","H2","styled","Ul","children","Li","Number","linkTo","movieName","fromLocation","number","to","state","from","useState","movies","setMovies","location","useLocation","useEffect","fetchMovies","map","index","movieId"],"sourceRoot":""}