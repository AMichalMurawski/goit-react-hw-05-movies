{"version":3,"file":"static/js/128.aa8c7a45.chunk.js","mappings":"kSAEaA,EAAKC,EAAAA,GAAAA,GAAH,wGAOFC,EAAKD,EAAAA,GAAAA,GAAH,qEAKFE,EAAMF,EAAAA,GAAAA,IAAH,yCAIHG,EAAcH,EAAAA,GAAAA,EAAH,iH,SCDxB,EAdqB,SAAC,GAAmC,IAAjCI,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SACvC,OACE,UAACL,EAAD,WACgB,OAAbK,GACC,SAACJ,EAAD,CAAKK,IAAKD,EAAUE,IAAG,gBAAWJ,MAElC,yCAAiBA,MAEnB,SAACD,EAAD,UAAcC,KACd,UAACD,EAAD,yBAAyBE,OAG9B,ECgCD,EAzCiB,WACf,IAAQI,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA4BE,EAAAA,EAAAA,eAASC,GAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,qGACKC,EAAAA,EAAAA,IAAeR,GADpB,OACZS,EADY,OAGhBJ,EADe,OAAbI,GACQ,OAAIA,GAEJ,IALM,2CAAH,qDAQjBF,GACD,GAAE,CAACP,KAGF,8BACGI,GACC,SAACd,EAAD,UACGc,EAAOM,KAAI,SAAAC,GACV,IAAQX,EAAkCW,EAAlCX,GAAIH,EAA8Bc,EAA9Bd,SAAUF,EAAoBgB,EAApBhB,KAAMC,EAAce,EAAdf,UAC5B,OACE,SAAC,EAAD,CAEEC,SAAUA,EACVF,KAAMA,EACNC,UAAWA,GAHNI,EAMV,WAEUG,IAAXC,GACF,8CAEA,qEAIP,C","sources":["components/CastList.styled.js","components/CastListItem.jsx","components/CastList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const Li = styled.li`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Img = styled.img`\n  width: 150px;\n`;\n\nexport const Description = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 2;\n  padding: 0;\n  margin: 0;\n`;\n","import { Li, Img, Description } from './CastList.styled';\nimport PropTypes from 'prop-types';\n\nconst CastListItem = ({ name, character, srcImage }) => {\n  return (\n    <Li>\n      {srcImage !== null ? (\n        <Img src={srcImage} alt={`actor ${name}`} />\n      ) : (\n        <p>No image for {name}</p>\n      )}\n      <Description>{name}</Description>\n      <Description>Character: {character}</Description>\n    </Li>\n  );\n};\n\nexport default CastListItem;\n\nCastListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  srcImage: PropTypes.string,\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieCast } from '../api/fetchTheMovies.js';\nimport CastListItem from './CastListItem.jsx';\nimport { Ul } from './CastList.styled';\n\nconst CastList = () => {\n  const { id } = useParams();\n  const [actors, setActors] = useState(undefined);\n\n  useEffect(() => {\n    const fetchActors = async () => {\n      const response = await fetchMovieCast(id);\n      if (response !== null) {\n        setActors([...response]);\n      } else {\n        setActors([]);\n      }\n    };\n    fetchActors();\n  }, [id]);\n\n  return (\n    <>\n      {actors ? (\n        <Ul>\n          {actors.map(actor => {\n            const { id, srcImage, name, character } = actor;\n            return (\n              <CastListItem\n                key={id}\n                srcImage={srcImage}\n                name={name}\n                character={character}\n              />\n            );\n          })}\n        </Ul>\n      ) : actors === undefined ? (\n        <div>Loading cast...</div>\n      ) : (\n        <div>We don't have any casts for this movie</div>\n      )}\n    </>\n  );\n};\n\nexport default CastList;\n"],"names":["Ul","styled","Li","Img","Description","name","character","srcImage","src","alt","id","useParams","useState","undefined","actors","setActors","useEffect","fetchActors","fetchMovieCast","response","map","actor"],"sourceRoot":""}